// Code generated by mockery v2.28.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// UserCreator is an autogenerated mock type for the UserCreator type
type UserCreator struct {
	mock.Mock
}

// CreateUser provides a mock function with given fields: name, surname, mail, date, cash
func (_m *UserCreator) CreateUser(name string, surname string, mail string, date string, cash int) (int64, error) {
	ret := _m.Called(name, surname, mail, date, cash)

	var r0 int64
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string, string, string, int) (int64, error)); ok {
		return rf(name, surname, mail, date, cash)
	}
	if rf, ok := ret.Get(0).(func(string, string, string, string, int) int64); ok {
		r0 = rf(name, surname, mail, date, cash)
	} else {
		r0 = ret.Get(0).(int64)
	}

	if rf, ok := ret.Get(1).(func(string, string, string, string, int) error); ok {
		r1 = rf(name, surname, mail, date, cash)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewUserCreator interface {
	mock.TestingT
	Cleanup(func())
}

// NewUserCreator creates a new instance of UserCreator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUserCreator(t mockConstructorTestingTNewUserCreator) *UserCreator {
	mock := &UserCreator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
